# Join the tables by player names
CREATE TABLE nba.full_stats
SELECT *
FROM nba.draft_combine_stats
Join nba.nba_players_career_data 
ON draft_combine_stats.player_name = nba_players_career_data.player;

# Finds players who have same name by finding difference in year
SELECT *
FROM nba.full_stats
WHERE season != year

# Delete players who have same name with wrong stats
DELETE FROM nba.full_stats
WHERE player_id = 203318

DELETE FROM nba.full_stats
WHERE player_id = 1629018

DELETE FROM nba.full_stats
WHERE player_id = 12203

DELETE FROM nba.full_stats
WHERE player_id = 1628972

DELETE FROM nba.full_stats
WHERE player_id = 201147

# Number of Point Guards in draft (138)
SELECT COUNT(*)
FROM nba.full_stats
WHERE position LIKE '%PG%'

# Number of Shooting Guards in draft (202)
SELECT COUNT(*)
FROM nba.full_stats
WHERE position LIKE '%SG%'

# Number of small forwards in draft (176)
SELECT COUNT(*)
FROM nba.full_stats
WHERE position LIKE '%SF%'

# Number of Power Forwards in draft (181)
SELECT COUNT(*)
FROM nba.full_stats
WHERE position LIKE '%PF%'

# Number of Centers in draft (88)
SELECT COUNT(*)
FROM nba.full_stats
WHERE position LIKE '%C%'

# Find the average vertical and bench press for each position
SELECT position, AVG(standing_vertical_leap) AS avg_standing_vertical, AVG(bench_press) AS avg_bench_press
FROM nba.full_stats
GROUP BY position;

# Merge PF-C and C-PF as same position
UPDATE nba.full_stats
SET position = REPLACE(position, 'C-PF', 'PF-C')
WHERE position LIKE '%C-PF%' 

# Merge SF-PF and PF-SF
UPDATE nba.full_stats
SET position = REPLACE(position, 'PF-SF', 'SF-PF')
WHERE position LIKE '%PF-SF%' 

# Merge SG-SF and SF-SG
UPDATE nba.full_stats
SET position = REPLACE(position, 'SF-SG', 'SG-SF')
WHERE position LIKE '%SF-SG%' 

# Merge PG-SG and SG-PG
UPDATE nba.full_stats
SET position = REPLACE(position, 'SG-PG', 'PG-SG')
WHERE position LIKE '%SG-PG%' 



# From the result of the previous query, I noticed that those who played 2 positions on average had a higher bench press, decided to compare 2 VS 1 position stats
SELECT
  CASE 
    WHEN position LIKE '%-%' THEN 'Two Positions' 
    ELSE 'One Position' 
  END AS group_position, 
  AVG(standing_vertical_leap) AS avg_standing_vertical, 
  AVG(bench_press) AS avg_bench_press 
FROM nba.full_stats
GROUP BY group_position;

# Finds the player count of each position and the average selection in the draft
SELECT position, COUNT(*) AS player_count, AVG(overall_pick) AS average_selection
FROM nba.full_stats
GROUP BY position 

# Finds the tallest and shortest player in each position and lists their names
SELECT full_stats.position, 
       MAX(p1.height_wo_shoes) AS tallest_height, 
       MIN(p2.height_wo_shoes) AS shortest_height, 
       SUBSTRING_INDEX(GROUP_CONCAT(DISTINCT p1.player_name ORDER BY p1.height_wo_shoes DESC SEPARATOR ', '), ',', 1) AS tallest_player, 
       SUBSTRING_INDEX(GROUP_CONCAT(DISTINCT p2.player_name ORDER BY p2.height_wo_shoes ASC SEPARATOR ', '), ',', 1) AS shortest_player 
FROM nba.full_stats AS full_stats
JOIN nba.full_stats AS p1 ON full_stats.position = p1.position AND full_stats.height_wo_shoes = p1.height_wo_shoes
JOIN nba.full_stats AS p2 ON full_stats.position = p2.position AND full_stats.height_wo_shoes = p2.height_wo_shoes
GROUP BY full_stats.position
ORDER BY tallest_height DESC;

# Finds the average minutes of each position per game
SELECT position, COUNT(*) AS player_count, AVG(average_minutes_played) AS average_minutes
FROM nba.full_stats
GROUP BY position 

# Finds the average minutes played per draft class
SELECT Year, COUNT(*) AS player_count, AVG(average_minutes_played) AS average_minutes
FROM nba.full_stats
GROUP BY year



# Finds the average minutes of 1 and 2 position players
SELECT 
  CASE 
    WHEN position LIKE '%-%' THEN 'Two Positions' 
    ELSE 'One Position'
  END AS group_position, -- add a comma here
  AVG(average_minutes_played) AS average_minutes
FROM nba.full_stats
GROUP BY 
  CASE 
    WHEN position LIKE '%-%' THEN 'Two Positions' 
    ELSE 'One Position'
  END

#Finds the number of 1 and 2 position players
SELECT
  CASE 
    WHEN position LIKE '%-%' THEN 'Two Positions' 
    ELSE 'One Position' 
  END AS group_position, 
  Count(player_name)
FROM nba.full_stats
GROUP BY group_position;
